<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.czy.seed.mvc.sys.mapper.SysOrgMapper">


    <resultMap id="BaseResultMap" types="com.czy.seed.mvc.sys.entity.SysOrg">
        <id column="ID"  property="id"/>
        <result column="PARENT_ID"  property="parentId"/>
        <result column="CODE" jdbcType="VARCHAR" property="code"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="MEMO" jdbcType="VARCHAR" property="memo"/>
    </resultMap>

    <insert id="insert" parameterType="com.czy.seed.mvc.sys.entity.SysOrg" useGeneratedKeys="true" keyProperty="id">
        insert into SYS_ORG
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            PARENT_ID,
            CODE,
            NAME,
            MEMO,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="parentId != null">
                #{parentId},
            </if>
            <if test="parentId == null">
                DEFAULT,
            </if>
            <if test="code != null">
                #{code, jdbcType=VARCHAR},
            </if>
            <if test="code == null">
                DEFAULT,
            </if>
            <if test="name != null">
                #{name, jdbcType=VARCHAR},
            </if>
            <if test="name == null">
                DEFAULT,
            </if>
            <if test="memo != null">
                #{memo, jdbcType=VARCHAR},
            </if>
            <if test="memo == null">
                DEFAULT,
            </if>
        </trim>
    </insert>

    <insert id="insertList" parameterType="java.util.ArrayList" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into SYS_ORG
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ID,
            PARENT_ID,
            CODE,
            NAME,
            MEMO,
        </trim>
        VALUES
        <foreach collection="list" item="record" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="record.id != null">
                    #{record.id},
                </if>
                <if test="record.id == null">
                    DEFAULT,
                </if>
                <if test="record.parentId != null">
                    #{record.parentId},
                </if>
                <if test="record.parentId == null">
                    DEFAULT,
                </if>
                <if test="record.code != null">
                    #{record.code, jdbcType=VARCHAR},
                </if>
                <if test="record.code == null">
                    DEFAULT,
                </if>
                <if test="record.name != null">
                    #{record.name, jdbcType=VARCHAR},
                </if>
                <if test="record.name == null">
                    DEFAULT,
                </if>
                <if test="record.memo != null">
                    #{record.memo, jdbcType=VARCHAR},
                </if>
                <if test="record.memo == null">
                    DEFAULT,
                </if>
            </trim>
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.czy.seed.mvc.sys.entity.SysOrg">
        update SYS_ORG
        <trim prefix=" set " suffix=" " suffixOverrides=",">
            PARENT_ID = #{parentId},
            CODE = #{code, jdbcType=VARCHAR},
            NAME = #{name, jdbcType=VARCHAR},
            MEMO = #{memo, jdbcType=VARCHAR},
        </trim>
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            ID = #{id} and
        </trim>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.czy.seed.mvc.sys.entity.SysOrg">
        update SYS_ORG
        <trim prefix=" set " suffix=" " suffixOverrides=",">
            <if test="parentId != null">
                PARENT_ID = #{parentId},
            </if>
            <if test="code != null">
                CODE = #{code, jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                NAME = #{name, jdbcType=VARCHAR},
            </if>
            <if test="memo != null">
                MEMO = #{memo, jdbcType=VARCHAR},
            </if>
        </trim>
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            ID = #{id} and
        </trim>
    </update>

    <update id="updateByParams" parameterType="com.czy.seed.mvc.sys.entity.SysOrg">
        update SYS_ORG
        <trim prefix=" set " suffix=" " suffixOverrides=",">
            PARENT_ID = #{record.parentId},
            CODE = #{record.code,jdbcType=VARCHAR},
            NAME = #{record.name,jdbcType=VARCHAR},
            MEMO = #{record.memo,jdbcType=VARCHAR},
        </trim>
        <if test="inParams != null">
            <where>
                <foreach collection="inParams.orCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                    <if test="criteria.valid == false">
                        1 = -1
                    </if>
                </foreach>
            </where>
        </if>
        <if test = "inParams == null">
            <where>
                1 = -1
            </where>
        </if>

    </update>

    <update id="updateSelectiveByParams">
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasValue(record) == true">
            update SYS_ORG
            <trim prefix=" set " suffix=" " suffixOverrides=",">
                <if test="record.id != null">
                    ID = #{record.id},
                </if>
                <if test="record.parentId != null">
                    PARENT_ID = #{record.parentId},
                </if>
                <if test="record.code != null">
                    CODE = #{record.code, jdbcType=VARCHAR},
                </if>
                <if test="record.name != null">
                    NAME = #{record.name, jdbcType=VARCHAR},
                </if>
                <if test="record.memo != null">
                    MEMO = #{record.memo, jdbcType=VARCHAR},
                </if>
            </trim>
            <if test="inParams != null">
                <where>
                    <foreach collection="inParams.orCriteria" item="criteria" separator="or">
                        <if test="criteria.valid">
                            <trim prefix="(" prefixOverrides="and" suffix=")">
                                <foreach collection="criteria.criteria" item="criterion">
                                    <choose>
                                        <when test="criterion.noValue">
                                            and ${criterion.condition}
                                        </when>
                                        <when test="criterion.singleValue">
                                            and ${criterion.condition} #{criterion.value}
                                        </when>
                                        <when test="criterion.betweenValue">
                                            and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                        </when>
                                        <when test="criterion.listValue">
                                            and ${criterion.condition}
                                            <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                     separator=",">
                                                #{listItem}
                                            </foreach>
                                        </when>
                                    </choose>
                                </foreach>
                            </trim>
                        </if>
                        <if test="criteria.valid == false">
                            1 = -1
                        </if>
                    </foreach>
                </where>
            </if>
            <if test = "inParams == null">
                <where>
                    1 = -1
                </where>
            </if>
        </if>
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from SYS_ORG
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            ID = #{id} and
        </trim>
    </delete>

    <delete id="deleteByParams" parameterType="com.czy.seed.mybatis.base.QueryParams">
        delete from SYS_ORG
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                    <include refid="criteriaIsNotValid"/>
                </foreach>
            </where>
        </if>
        <if test="_parameter == null">
            <where>
                1 = -1
            </where>
        </if>
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="long">
        select
        <trim prefix=" " suffix=" " suffixOverrides=",">
            SYS_ORG.ID,
            SYS_ORG.PARENT_ID,
            SYS_ORG.CODE,
            SYS_ORG.NAME,
            SYS_ORG.MEMO,
        </trim>
        from SYS_ORG
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            SYS_ORG.ID = #{id} and
        </trim>
    </select>

    <select id="selectRelativeByPrimaryKey" resultMap="BaseResultMap" parameterType="long">
        select
        <trim prefix=" " suffix=" " suffixOverrides=",">
            SYS_ORG.ID,
            SYS_ORG.PARENT_ID,
            SYS_ORG.CODE,
            SYS_ORG.NAME,
            SYS_ORG.MEMO,
        </trim>
        from SYS_ORG
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            SYS_ORG.ID = #{id} and
        </trim>
    </select>

    <select id="selectListByParams" resultMap="BaseResultMap" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter)">
            <foreach collection="_parameter.selectColumns" item="selectColumn" separator=",">SYS_ORG.${selectColumn}</foreach>
        </if>
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter) == false">
            <trim prefix=" " suffix=" " suffixOverrides=",">
                SYS_ORG.ID,
                SYS_ORG.PARENT_ID,
                SYS_ORG.CODE,
                SYS_ORG.NAME,
                SYS_ORG.MEMO,
            </trim>
        </if>
        from SYS_ORG
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
            <if test="_parameter.orderByClause != null">
                ORDER BY ${orderByClause}
            </if>
        </if>
    </select>

    <select id="selectListRelativeByParams" resultMap="BaseResultMap" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter)">
            <foreach collection="_parameter.selectColumns" item="selectColumn" separator=",">SYS_ORG.${selectColumn}</foreach>
        </if>
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter) == false">
            <trim prefix=" " suffix=" " suffixOverrides=",">
                SYS_ORG.ID,
                SYS_ORG.PARENT_ID,
                SYS_ORG.CODE,
                SYS_ORG.NAME,
                SYS_ORG.MEMO,
            </trim>
        </if>
        from SYS_ORG
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
            <if test="_parameter.orderByClause != null">
                ORDER BY ${orderByClause}
            </if>
        </if>
    </select>

    <select id="selectOneByParams" resultMap="BaseResultMap" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select distinct
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter)">
            <foreach collection="_parameter.selectColumns" item="selectColumn" separator=",">SYS_ORG.${selectColumn}</foreach>
        </if>
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter) == false">
            <trim prefix=" " suffix=" " suffixOverrides=",">
                SYS_ORG.ID,
                SYS_ORG.PARENT_ID,
                SYS_ORG.CODE,
                SYS_ORG.NAME,
                SYS_ORG.MEMO,
            </trim>
        </if>
        from SYS_ORG
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
        </if>
    </select>

    <select id="selectOneRelativeByParams" resultMap="BaseResultMap" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select distinct
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter)">
            <foreach collection="_parameter.selectColumns" item="selectColumn" separator=",">SYS_ORG.${selectColumn}</foreach>
        </if>
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter) == false">
            <trim prefix=" " suffix=" " suffixOverrides=",">
                SYS_ORG.ID,
                SYS_ORG.PARENT_ID,
                SYS_ORG.CODE,
                SYS_ORG.NAME,
                SYS_ORG.MEMO,
            </trim>
        </if>
        from SYS_ORG
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
        </if>
    </select>

    <select id="selectCountByParams" resultType="int" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select
        count(*)
        from SYS_ORG
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
        </if>
    </select>

    <!--没有查询条件时，查询条件解析-->
    <sql id="criteriaIsNotValid">
        <if test="criteria.valid == false">
            1 = -1
        </if>
    </sql>

    <!--有查询条件时，查询条件解析-->
    <sql id="criteriaIsValid">
        <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
                <foreach collection="criteria.criteria" item="criterion">
                    <choose>
                        <when test="criterion.noValue">
                            and ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue">
                            and SYS_ORG.${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue">
                            and SYS_ORG.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                        </when>
                        <when test="criterion.listValue">
                            and ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                SYS_ORG.#{listItem}
                            </foreach>
                        </when>
                    </choose>
                </foreach>
            </trim>
        </if>
    </sql>

</mapper>