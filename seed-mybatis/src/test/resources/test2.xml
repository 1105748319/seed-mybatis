<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.czy.seed.mybatis.mapper.MySqlMapper">

    <cache eviction="LRU" flushInterval="60000" size="1024"  readOnly="false"></cache>

    <resultMap id="BaseResultMap" types="com.czy.seed.mybatis.entity.TestEntity">
        <id column="ID"  property="id"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <association property="one" javaType="com.czy.seed.mybatis.entity.One">
            <id column="one_ID"  property="id"/>
            <result column="one_TEST_ID"  property="testId"/>
            <result column="one_MEMO" jdbcType="VARCHAR" property="memo"/>
            <result column="one_NAME" jdbcType="VARCHAR" property="name"/>
        </association>
        <association property="one1" javaType="com.czy.seed.mybatis.entity.One">
            <id column="one1_ID"  property="id"/>
            <result column="one1_MEMO" jdbcType="VARCHAR" property="memo"/>
            <result column="one1_NAME" jdbcType="VARCHAR" property="name"/>
            <result column="one1_TEST_ID"  property="testId"/>
        </association>
        <collection property="oneList" ofType="com.czy.seed.mybatis.entity.One">
            <id column="oneList_ID"  property="id"/>
            <result column="oneList_MEMO" jdbcType="VARCHAR" property="memo"/>
            <result column="oneList_TEST_ID"  property="testId"/>
            <result column="oneList_NAME" jdbcType="VARCHAR" property="name"/>
        </collection>
    </resultMap>

    <insert id="insert" parameterType="com.czy.seed.mybatis.entity.TestEntity" useGeneratedKeys="true" keyProperty="id">
        insert into test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            NAME,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null">
                #{name, jdbcType=VARCHAR},
            </if>
            <if test="name == null">
                DEFAULT,
            </if>
        </trim>
    </insert>

    <insert id="insertList" parameterType="java.util.ArrayList" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ID,
            NAME,
        </trim>
        VALUES
        <foreach collection="list" item="record" index="index" separator=",">
            <if test="record.id != null">
                #{record.id},
            </if>
            <if test="id == null">
                DEFAULT,
            </if>
            <if test="record.name != null">
                #{record.name, jdbcType=VARCHAR},
            </if>
            <if test="name == null">
                DEFAULT,
            </if>
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.czy.seed.mybatis.entity.TestEntity">
        update test
        <trim prefix=" set " suffix=" " suffixOverrides=",">
            NAME = #{name, jdbcType=VARCHAR},
        </trim>
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            ID = #{id} and
        </trim>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.czy.seed.mybatis.entity.TestEntity">
        update test
        <trim prefix=" set " suffix=" " suffixOverrides=",">
            <if test="name != null">
                NAME = #{name, jdbcType=VARCHAR},
            </if>
        </trim>
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            ID = #{id} and
        </trim>
    </update>

    <update id="updateByParams" parameterType="com.czy.seed.mybatis.entity.TestEntity">
        update test
        <trim prefix=" set " suffix=" " suffixOverrides=",">
            NAME = #{record.name,jdbcType=VARCHAR},
        </trim>
        <if test="inParams != null">
            <where>
                <foreach collection="inParams.orCriteria" item="criteria" separator="or">
                    <if test="criteria.valid">
                        <trim prefix="(" prefixOverrides="and" suffix=")">
                            <foreach collection="criteria.criteria" item="criterion">
                                <choose>
                                    <when test="criterion.noValue">
                                        and ${criterion.condition}
                                    </when>
                                    <when test="criterion.singleValue">
                                        and ${criterion.condition} #{criterion.value}
                                    </when>
                                    <when test="criterion.betweenValue">
                                        and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                    </when>
                                    <when test="criterion.listValue">
                                        and ${criterion.condition}
                                        <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                 separator=",">
                                            #{listItem}
                                        </foreach>
                                    </when>
                                </choose>
                            </foreach>
                        </trim>
                    </if>
                    <if test="criteria.valid == false">
                        1 = -1
                    </if>
                </foreach>
            </where>
        </if>
        <if test = "inParams == null">
            <where>
                1 = -1
            </where>
        </if>

    </update>

    <update id="updateSelectiveByParams">
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasValue(record) == true">
            update test
            <trim prefix=" set " suffix=" " suffixOverrides=",">
                <if test="record.id != null">
                    ID = #{record.id},
                </if>
                <if test="record.name != null">
                    NAME = #{record.name, jdbcType=VARCHAR},
                </if>
            </trim>
            <if test="inParams != null">
                <where>
                    <foreach collection="inParams.orCriteria" item="criteria" separator="or">
                        <if test="criteria.valid">
                            <trim prefix="(" prefixOverrides="and" suffix=")">
                                <foreach collection="criteria.criteria" item="criterion">
                                    <choose>
                                        <when test="criterion.noValue">
                                            and ${criterion.condition}
                                        </when>
                                        <when test="criterion.singleValue">
                                            and ${criterion.condition} #{criterion.value}
                                        </when>
                                        <when test="criterion.betweenValue">
                                            and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                        </when>
                                        <when test="criterion.listValue">
                                            and ${criterion.condition}
                                            <foreach close=")" collection="criterion.value" item="listItem" open="("
                                                     separator=",">
                                                #{listItem}
                                            </foreach>
                                        </when>
                                    </choose>
                                </foreach>
                            </trim>
                        </if>
                        <if test="criteria.valid == false">
                            1 = -1
                        </if>
                    </foreach>
                </where>
            </if>
            <if test = "inParams == null">
                <where>
                    1 = -1
                </where>
            </if>
        </if>
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from test
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            ID = #{id} and
        </trim>
    </delete>

    <delete id="deleteByParams" parameterType="com.czy.seed.mybatis.base.QueryParams">
        delete from test
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                    <include refid="criteriaIsNotValid"/>
                </foreach>
            </where>
        </if>
        <if test="_parameter == null">
            <where>
                1 = -1
            </where>
        </if>
    </delete>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="long">
        select
        <trim prefix=" " suffix=" " suffixOverrides=",">
            test.ID,
            test.NAME,
        </trim>
        from test
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            test.ID = #{id} and
        </trim>
    </select>

    <select id="selectRelativeByPrimaryKey" resultMap="BaseResultMap" parameterType="long">
        select
        <trim prefix=" " suffix=" " suffixOverrides=",">
            test.ID,
            test.NAME,
            ONE_one.TEST_ID as one_TEST_ID,
            ONE_one.ID as one_ID,
            ONE_one.MEMO as one_MEMO,
            ONE_one.NAME as one_NAME,
            ONE_one1.MEMO as one1_MEMO,
            ONE_one1.NAME as one1_NAME,
            ONE_one1.ID as one1_ID,
            ONE_one1.TEST_ID as one1_TEST_ID,
            ONE_oneList.MEMO as oneList_MEMO,
            ONE_oneList.TEST_ID as oneList_TEST_ID,
            ONE_oneList.NAME as oneList_NAME,
            ONE_oneList.ID as oneList_ID,
        </trim>
        from test
        LEFT JOIN ONE ONE_ONE ON TEST.ID = ONE_ONE.ID
        LEFT JOIN ONE ONE_ONE1 ON TEST.ID = ONE_ONE1.TEST_ID
        LEFT JOIN ONE ONE_ONELIST ON TEST.NAME = ONE_ONELIST.NAME
        <trim prefix=" where " suffix=" " suffixOverrides="and">
            test.ID = #{id} and
        </trim>
    </select>

    <select id="selectListByParams" resultMap="BaseResultMap" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter)">
            <foreach collection="_parameter.selectColumns" item="selectColumn" separator=",">test.${selectColumn}</foreach>
        </if>
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter) == false">
            <trim prefix=" " suffix=" " suffixOverrides=",">
                test.ID,
                test.NAME,
            </trim>
        </if>
        from test
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
            <if test="_parameter.orderByClause != null">
                ORDER BY ${orderByClause}
            </if>
        </if>
    </select>

    <select id="selectListRelativeByParams" resultMap="BaseResultMap" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter)">
            <foreach collection="_parameter.selectColumns" item="selectColumn" separator=",">test.${selectColumn}</foreach>
        </if>
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter) == false">
            <trim prefix=" " suffix=" " suffixOverrides=",">
                test.ID,
                test.NAME,
                ONE_one.TEST_ID as one_TEST_ID,
                ONE_one.ID as one_ID,
                ONE_one.MEMO as one_MEMO,
                ONE_one.NAME as one_NAME,
                ONE_one1.MEMO as one1_MEMO,
                ONE_one1.NAME as one1_NAME,
                ONE_one1.ID as one1_ID,
                ONE_one1.TEST_ID as one1_TEST_ID,
                ONE_oneList.MEMO as oneList_MEMO,
                ONE_oneList.TEST_ID as oneList_TEST_ID,
                ONE_oneList.NAME as oneList_NAME,
                ONE_oneList.ID as oneList_ID,
            </trim>
        </if>
        from test
        LEFT JOIN ONE ONE_ONE ON TEST.ID = ONE_ONE.ID
        LEFT JOIN ONE ONE_ONE1 ON TEST.ID = ONE_ONE1.TEST_ID
        LEFT JOIN ONE ONE_ONELIST ON TEST.NAME = ONE_ONELIST.NAME
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
            <if test="_parameter.orderByClause != null">
                ORDER BY ${orderByClause}
            </if>
        </if>
    </select>

    <select id="selectOneByParams" resultMap="BaseResultMap" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select distinct
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter)">
            <foreach collection="_parameter.selectColumns" item="selectColumn" separator=",">test.${selectColumn}</foreach>
        </if>
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter) == false">
            <trim prefix=" " suffix=" " suffixOverrides=",">
                test.ID,
                test.NAME,
            </trim>
        </if>
        from test
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
        </if>
    </select>

    <select id="selectOneRelativeByParams" resultMap="BaseResultMap" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select distinct
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter)">
            <foreach collection="_parameter.selectColumns" item="selectColumn" separator=",">test.${selectColumn}</foreach>
        </if>
        <if test="@com.czy.seed.mybatis.sql.util.MybatisColumnsOGNL@hasSelectColumns(_parameter) == false">
            <trim prefix=" " suffix=" " suffixOverrides=",">
                test.ID,
                test.NAME,
                ONE_one.TEST_ID as one_TEST_ID,
                ONE_one.ID as one_ID,
                ONE_one.MEMO as one_MEMO,
                ONE_one.NAME as one_NAME,
                ONE_one1.MEMO as one1_MEMO,
                ONE_one1.NAME as one1_NAME,
                ONE_one1.ID as one1_ID,
                ONE_one1.TEST_ID as one1_TEST_ID,
                ONE_oneList.MEMO as oneList_MEMO,
                ONE_oneList.TEST_ID as oneList_TEST_ID,
                ONE_oneList.NAME as oneList_NAME,
                ONE_oneList.ID as oneList_ID,
            </trim>
        </if>
        from test
        LEFT JOIN ONE ONE_ONE ON TEST.ID = ONE_ONE.ID
        LEFT JOIN ONE ONE_ONE1 ON TEST.ID = ONE_ONE1.TEST_ID
        LEFT JOIN ONE ONE_ONELIST ON TEST.NAME = ONE_ONELIST.NAME
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
        </if>
    </select>

    <select id="selectCountByParams" resultType="int" parameterType="com.czy.seed.mybatis.base.QueryParams">
        select
        count(*)
        from test
        <if test="_parameter != null">
            <where>
                <foreach collection="orCriteria" item="criteria" separator="or">
                    <include refid="criteriaIsValid"/>
                </foreach>
            </where>
        </if>
    </select>

    <!--没有查询条件时，查询条件解析-->
    <sql id="criteriaIsNotValid">
        <if test="criteria.valid == false">
            1 = -1
        </if>
    </sql>

    <!--有查询条件时，查询条件解析-->
    <sql id="criteriaIsValid">
        <if test="criteria.valid">
            <trim prefix="(" prefixOverrides="and" suffix=")">
                <foreach collection="criteria.criteria" item="criterion">
                    <choose>
                        <when test="criterion.noValue">
                            and ${criterion.condition}
                        </when>
                        <when test="criterion.singleValue">
                            and test.${criterion.condition} #{criterion.value}
                        </when>
                        <when test="criterion.betweenValue">
                            and test.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                        </when>
                        <when test="criterion.listValue">
                            and ${criterion.condition}
                            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                test.#{listItem}
                            </foreach>
                        </when>
                    </choose>
                </foreach>
            </trim>
        </if>
    </sql>

</mapper>